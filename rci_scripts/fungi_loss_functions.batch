#!/bin/bash
#SBATCH --partition amdgpulong
#SBATCH --nodes 1
#SBATCH --ntasks-per-node 1
#SBATCH --mem-per-cpu 8G
#SBATCH --gres gpu:1
#SBATCH --time 3-0:00:00
#SBATCH --job-name snakeid
#SBATCH --output jupyter-notebook-gpu-%J.log

# get tunneling info
XDG_RUNTIME_DIR=""
port=$(shuf -i8000-9999 -n1)
node=$(hostname -s)
user=$(whoami)

# print tunneling instructions jupyter-log
echo -e "
MacOS or linux terminal command to create your ssh tunnel:
ssh -N -L ${port}:${node}:${port} ${user}@login.rci.cvut.cz
"

ml Anaconda3/2021.05
ml PyTorch/1.7.1-fosscuda-2020b # PyTorch/1.7.1-foss-2020b
ml torchvision/0.8.2-fosscuda-2020b-PyTorch-1.7.1 # torchvision/0.8.2-foss-2020b-PyTorch-1.7.1 


# jupyter-lab --no-browser --port=${port} --ip=${node}
pip install matplotlib timm fastprogress scikit-learn

MODEL='vit_base_224'  # efficientnet_b0

# ce
# python train_fungi.py --model $MODEL --loss ce --weight none

# weighted ce
python train_fungi.py --model $MODEL --loss ce --weight inverse_class_frequency
python train_fungi.py --model $MODEL --loss ce --weight linear_class
python train_fungi.py --model $MODEL --loss ce --weight modified_linear_class

python train_fungi.py --model $MODEL --loss ce --weight class_balanced --beta 0.9
python train_fungi.py --model $MODEL --loss ce --weight class_balanced --beta 0.99
python train_fungi.py --model $MODEL --loss ce --weight class_balanced --beta 0.999
python train_fungi.py --model $MODEL --loss ce --weight class_balanced --beta 0.9999

# focal
python train_fungi.py --model $MODEL --loss focal --weight none --gamma 0.5
python train_fungi.py --model $MODEL --loss focal --weight none --gamma 1.0
python train_fungi.py --model $MODEL --loss focal --weight none --gamma 2.0
python train_fungi.py --model $MODEL --loss focal --weight none --gamma 5.0
